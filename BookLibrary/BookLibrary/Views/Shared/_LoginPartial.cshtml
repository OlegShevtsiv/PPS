@using Microsoft.AspNetCore.Identity;

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="collapse navbar-collapse">
        <ul class="navbar-nav mx-auto mr-md-0">
            @if (await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "library admin"))
            {
                <li class="nav-item">
                    <a style="color:lightgreen" class="nav-link" href="/ManageLibrary/Index" title="Manage">Manage Library</a>
                </li>
            }
            @if (await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "user admin"))
            {
                <li class="nav-item">
                    <a style="color:orangered" class="nav-link" href="/ManageUsers/Index" title="Manage">Manage users</a>
                </li>
            }
            <li class="nav-item">
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" class="nav-link text-white">Hello @((await UserManager.GetUserAsync(User)).Name)!</a>
            </li>
            <li class="nav-item d-flex flex-column justify-content-center pl-2">
                <button type="submit" class="btn btn-primary btn-lg">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="navbar-nav mx-auto mr-md-0">
        <li class="nav-item"><a asp-area="Identity" asp-page="/Account/Register" class="nav-link">Register</a></li>
        <li class="nav-item"><a asp-area="Identity" asp-page="/Account/Login" class="nav-link">Login</a></li>
    </ul>
}