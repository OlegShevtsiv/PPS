@using Microsoft.AspNetCore.Identity;


@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @((await UserManager.GetUserAsync(User)).Name)!</a>
            </li>
            @if (await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "library admin"))
            {
            <li>
                <a href="/ManageLibrary/Index" title="Manage">Manage Library</a>
            </li>
            }
            @if(await UserManager.IsInRoleAsync((await UserManager.GetUserAsync(User)), "user admin"))
            {
            <li>
                <a href="/ManageUsers/Index" title="Manage">Manage users</a>
            </li>
            }
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}